package servicenow

import (
	"github.com/turbot/steampipe-plugin-sdk/v5/grpc/proto"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin/transform"
)

const CmdbCIServiceTableName = "cmdb_ci_service"

//// TABLE DEFINITION

func tableServicenowCmdbCiService() *plugin.Table {
	return &plugin.Table{
		Name:             "servicenow_cmdb_ci_service",
		DefaultTransform: transform.FromCamel(),
		Description:      "Configuration Item.",
		List: &plugin.ListConfig{
			Hydrate: listServicenowObjectsByTable(CmdbCIServiceTableName, nil),
		},
		Get: &plugin.GetConfig{
			Hydrate:    getServicenowObjectbyID(CmdbCIServiceTableName),
			KeyColumns: plugin.SingleColumn("sys_id"),
		},
		Columns: []*plugin.Column{
			{Name: "asset_tag", Description: "Asset tag.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "asset_tag")},
			{Name: "asset", Description: "Asset.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "asset")},
			{Name: "assigned_to", Description: "Assigned to.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "assigned_to")},
			{Name: "assigned", Description: "Assigned.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "assigned").Transform(parseDateTime)},
			{Name: "assignment_group", Description: "Change Group.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "assignment_group")},
			{Name: "attestation_score", Description: "Attestation Score.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "attestation_score")},
			{Name: "attestation_status", Description: "Attestation Status.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "attestation_status")},
			{Name: "attested_by", Description: "Attested By.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "attested_by")},
			{Name: "attested_date", Description: "Attested Date.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "attested_date").Transform(parseDateTime)},
			{Name: "attested", Description: "Attested.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "attested")},
			{Name: "attributes", Description: "Attributes that describe the configuration item, usually XML.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "attributes")},
			{Name: "busines_criticality", Description: "DR Strategies would be based on this.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "busines_criticality")},
			{Name: "business_contact", Description: "The person to contact for functional related needs for this service.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "business_contact")},
			{Name: "business_need", Description: "The business need for this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "business_need")},
			{Name: "business_relation_manager", Description: "Relationship manager for this service.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "business_relation_manager")},
			{Name: "business_unit", Description: "Business Unit.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "business_unit")},
			{Name: "can_print", Description: "Provides network printing service.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "can_print")},
			{Name: "category", Description: "Category.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "category")},
			{Name: "change_control", Description: "Approval group.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "change_control")},
			{Name: "checked_in", Description: "Checked in.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "checked_in").Transform(parseDateTime)},
			{Name: "checked_out", Description: "Checked out.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "checked_out").Transform(parseDateTime)},
			{Name: "checkout", Description: "Checkout.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "checkout")},
			{Name: "comments", Description: "Comments.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "comments")},
			{Name: "company", Description: "Company.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "company")},
			{Name: "compatibility_dependencies", Description: "Compatibility dependencies for this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "compatibility_dependencies")},
			{Name: "consumer_type", Description: "Delineates internal vs. external users.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "consumer_type")},
			{Name: "correlation_id", Description: "Correlation ID.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "correlation_id")},
			{Name: "cost_cc", Description: "Cost currency.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "cost_cc")},
			{Name: "cost_center", Description: "Cost center.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "cost_center")},
			{Name: "cost", Description: "Cost.", Type: proto.ColumnType_DOUBLE, Transform: transform.FromP(getFieldFromSObjectMap, "cost")},
			{Name: "delivery_date", Description: "Order received.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "delivery_date").Transform(parseDateTime)},
			{Name: "department", Description: "Department.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "department")},
			{Name: "discovery_source", Description: "Discovery source.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "discovery_source")},
			{Name: "dns_domain", Description: "DNS Domain.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "dns_domain")},
			{Name: "due_in", Description: "Due in.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "due_in")},
			{Name: "due", Description: "Due.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "due").Transform(parseDateTime)},
			{Name: "duplicate_of", Description: "Which CI is this a duplicate of.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "duplicate_of")},
			{Name: "end_date", Description: "When the service is valid till.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "end_date").Transform(parseDateTime)},
			{Name: "environment", Description: "Environment.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "environment")},
			{Name: "fault_count", Description: "Fault count.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "fault_count")},
			{Name: "first_discovered", Description: "First discovered.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "first_discovered").Transform(parseDateTime)},
			{Name: "fqdn", Description: "Fully qualified domain name.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "fqdn")},
			{Name: "gl_account", Description: "GL account.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "gl_account")},
			{Name: "install_date", Description: "Installed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "install_date").Transform(parseDateTime)},
			{Name: "install_status", Description: "Install Status.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "install_status")},
			{Name: "invoice_number", Description: "Invoice number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "invoice_number")},
			{Name: "ip_address", Description: "Context IP Address.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "ip_address")},
			{Name: "justification", Description: "Justification.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "justification")},
			{Name: "last_discovered", Description: "Most recent discovery.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "last_discovered").Transform(parseDateTime)},
			{Name: "last_review_date", Description: "Date on which this service was last reviewed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "last_review_date").Transform(parseDateTime)},
			{Name: "lease_id", Description: "Lease contract.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "lease_id")},
			{Name: "life_cycle_stage_status", Description: "The specific status of a CI within its life cycle phase.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "life_cycle_stage_status")},
			{Name: "life_cycle_stage", Description: "The general life cycle phase that the CI is at.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "life_cycle_stage")},
			{Name: "location", Description: "Location.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "location")},
			{Name: "mac_address", Description: "Context MAC Address.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "mac_address")},
			{Name: "maintenance_schedule", Description: "Maintenance schedule.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "maintenance_schedule")},
			{Name: "managed_by_group", Description: "Managed By Group.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "managed_by_group")},
			{Name: "managed_by", Description: "Managed by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "managed_by")},
			{Name: "manufacturer", Description: "Manufacturer.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "manufacturer")},
			{Name: "model_id", Description: "Model ID.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "model_id")},
			{Name: "model_number", Description: "Model number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "model_number")},
			{Name: "monitor", Description: "Enable monitoring of the configuration item.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "monitor")},
			{Name: "monitoring_requirements", Description: "Requirements to monitor this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "monitoring_requirements")},
			{Name: "name", Description: "Name.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "name")},
			{Name: "number", Description: "Number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "number")},
			{Name: "operational_status", Description: "Operational status.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "operational_status")},
			{Name: "order_date", Description: "Ordered.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "order_date").Transform(parseDateTime)},
			{Name: "owned_by", Description: "Owned by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "owned_by")},
			{Name: "parent", Description: "Group instances together.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "parent")},
			{Name: "portfolio_status", Description: "Phase.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "portfolio_status")},
			{Name: "prerequisites", Description: "Pre-requisites for this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "prerequisites")},
			{Name: "price_model", Description: "Model under which this service is priced.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "price_model")},
			{Name: "price_unit", Description: "Short name for a unit of this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "price_unit")},
			{Name: "published_ref", Description: "Published Item.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "published_ref")},
			{Name: "purchase_date", Description: "Purchased.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "purchase_date")},
			{Name: "schedule", Description: "Schedule.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "schedule")},
			{Name: "serial_number", Description: "Serial number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "serial_number")},
			{Name: "service_classification", Description: "Service classification.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "service_classification")},
			{Name: "service_level_requirement", Description: "Service level requirement.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "service_level_requirement")},
			{Name: "service_owner_delegate", Description: "The delegate who mangages the service along with service owner.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "service_owner_delegate")},
			{Name: "service_status", Description: "Status.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "service_status")},
			{Name: "short_description", Description: "Description.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "short_description")},
			{Name: "skip_sync", Description: "Skip sync.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "skip_sync")},
			{Name: "sla", Description: "Service Level Agreement.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "sla")},
			{Name: "spm_service_portfolio", Description: "The service portfolio this service is associated with.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "spm_service_portfolio")},
			{Name: "spm_taxonomy_node", Description: "The taxonomy node this service is associated with.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "spm_taxonomy_node")},
			{Name: "stakeholders", Description: "Stakeholders for the service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "stakeholders")},
			{Name: "start_date", Description: "Start date.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "start_date").Transform(parseDateTime)},
			{Name: "state", Description: "State.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "state")},
			{Name: "subcategory", Description: "Subcategory.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "subcategory")},
			{Name: "support_group", Description: "Support group.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "support_group")},
			{Name: "supported_by", Description: "Supported by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "supported_by")},
			{Name: "sys_class_name", Description: "Class.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_class_name")},
			{Name: "sys_class_path", Description: "Sys class path.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_class_path")},
			{Name: "sys_created_by", Description: "Created by.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_created_by")},
			{Name: "sys_created_on", Description: "Created.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "sys_created_on").Transform(parseDateTime)},
			{Name: "sys_domain_path", Description: "Domain Path.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_domain_path")},
			{Name: "sys_domain", Description: "Domain. ", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "sys_domain")},
			{Name: "sys_id", Description: "Sys ID.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_id")},
			{Name: "sys_mod_count", Description: "Updates.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "sys_mod_count")},
			{Name: "sys_updated_by", Description: "Updated by.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_updated_by")},
			{Name: "sys_updated_on", Description: "Updated.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "sys_updated_on").Transform(parseDateTime)},
			{Name: "unit_description", Description: "Longer description of a unit of this service.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "unit_description")},
			{Name: "unverified", Description: "Requires verification.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "unverified")},
			{Name: "used_for", Description: "Used for.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "used_for")},
			{Name: "user_group", Description: "Users supported.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "user_group")},
			{Name: "vendor", Description: "Vendor. ", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "vendor")},
			{Name: "version", Description: "Version.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "version")},
			{Name: "warranty_expiration", Description: "Warranty expiration.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "warranty_expiration")},
		},
	}
}
