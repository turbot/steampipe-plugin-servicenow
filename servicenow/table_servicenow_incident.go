package servicenow

import (
	"github.com/turbot/steampipe-plugin-sdk/v5/grpc/proto"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin"
	"github.com/turbot/steampipe-plugin-sdk/v5/plugin/transform"
)

const IncidentTableName = "incident"

//// TABLE DEFINITION

func tableServicenowIncident() *plugin.Table {
	return &plugin.Table{
		Name:             "servicenow_incident",
		Description:      "Incident.",
		DefaultTransform: transform.FromCamel(),
		List: &plugin.ListConfig{
			Hydrate: listServicenowObjectsByTable(IncidentTableName, nil),
		},
		Get: &plugin.GetConfig{
			Hydrate:    getServicenowObjectbyID(IncidentTableName),
			KeyColumns: plugin.SingleColumn("sys_id"),
		},
		Columns: []*plugin.Column{
			{Name: "active", Description: "Active.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "active")},
			{Name: "activity_due", Description: "Date by which the Inactivity Monitor expects the task to be updated.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "activity_due").Transform(parseDateTime)},
			{Name: "additional_assignee_list", Description: "Additional assignees.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "additional_assignee_list")},
			{Name: "approval_history", Description: "Approval history.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "approval_history")},
			{Name: "approval_set", Description: "Approval set.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "approval_set").Transform(parseDateTime)},
			{Name: "approval", Description: "Approval.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "approval")},
			{Name: "assigned_to", Description: "Person primarily responsible for working this task.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "assigned_to")},
			{Name: "assignment_group", Description: "Assignment group.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "assignment_group")},
			{Name: "business_duration", Description: "Business time elapsed before task was closed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "business_duration").Transform(parseDateTime)},
			{Name: "business_impact", Description: "Business impact.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "business_impact")},
			{Name: "business_service", Description: "Service.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "business_service")},
			{Name: "business_stc", Description: "Business time elapsed (stored in seconds) before Incident was resolved.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "business_stc")},
			{Name: "calendar_duration", Description: "Time elapsed before task was closed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "calendar_duration").Transform(parseDateTime)},
			{Name: "calendar_stc", Description: "Time elapsed (stored in seconds) before Incident was Resolved.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "calendar_stc")},
			{Name: "caller_id", Description: "Person who reported or is affected by this incident.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "caller_id")},
			{Name: "category", Description: "Category.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "category")},
			{Name: "cause", Description: "Probable cause.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "cause")},
			{Name: "caused_by", Description: "Change request that caused the incident.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "caused_by")},
			{Name: "child_incidents", Description: "Number of child Incidents related to this Problem.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "child_incidents")},
			{Name: "close_code", Description: "For use in reporting.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "close_code")},
			{Name: "close_notes", Description: "Close notes.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "close_notes")},
			{Name: "closed_at", Description: "Closed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "closed_at").Transform(parseDateTime)},
			{Name: "closed_by", Description: "Closed by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "closed_by")},
			{Name: "cmdb_ci", Description: "Item or service affected.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "cmdb_ci")},
			{Name: "comments_and_work_notes", Description: "Combined output of Additional comments and Work notes.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "comments_and_work_notes")},
			{Name: "comments", Description: "Journaled field, shared with the end user.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "comments")},
			{Name: "company", Description: "Company.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "company")},
			{Name: "contact_type", Description: "Contact type.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "contact_type")},
			{Name: "contract", Description: "Contract.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "contract")},
			{Name: "correlation_display", Description: "Correlation display.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "correlation_display")},
			{Name: "correlation_id", Description: "Correlation ID.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "correlation_id")},
			{Name: "delivery_plan", Description: "Delivery plan.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "delivery_plan")},
			{Name: "delivery_task", Description: "Delivery task.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "delivery_task")},
			{Name: "description", Description: "Description.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "description")},
			{Name: "due_date", Description: "Expected date from assigned to.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "due_date").Transform(parseDateTime)},
			{Name: "escalation", Description: "Escalation.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "escalation")},
			{Name: "expected_start", Description: "Expected start.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "expected_start").Transform(parseDateTime)},
			{Name: "follow_up", Description: "Follow up.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "follow_up").Transform(parseDateTime)},
			{Name: "group_list", Description: "Interested groups.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "group_list")},
			{Name: "hold_reason", Description: "On hold reason.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "hold_reason")},
			{Name: "impact", Description: "Measure of the business criticality of the affected service.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "impact")},
			{Name: "incident_state", Description: "Workflow state of the incident.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "incident_state")},
			{Name: "knowledge", Description: "If checked, will automatically create a Draft knowledge article upon closure.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "knowledge")},
			{Name: "location", Description: "Where the caller or service is located.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "location")},
			{Name: "made_sla", Description: "Made SLA.", Type: proto.ColumnType_BOOL, Transform: transform.FromP(getFieldFromSObjectMap, "made_sla")},
			{Name: "notify", Description: "Notify.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "notify")},
			{Name: "number", Description: "Number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "number")},
			{Name: "opened_at", Description: "Opened.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "opened_at").Transform(parseDateTime)},
			{Name: "opened_by", Description: "Opened by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "opened_by")},
			{Name: "order", Description: "Order.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "order")},
			{Name: "origin_id", Description: "Origin.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "origin_id")},
			{Name: "origin_table", Description: "Table of the Origin record.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "origin_table")},
			{Name: "parent_incident", Description: "Can be used to collect Incidents for the same root issue.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "parent_incident")},
			{Name: "parent", Description: "Parent.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "parent")},
			{Name: "priority", Description: "Sequence in which an Incident or Problem needs to be resolved, based on impact and urgency.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "priority")},
			{Name: "problem_id", Description: "Related problem, if one exists.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "problem_id")},
			{Name: "reassignment_count", Description: "Reassignment count.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "reassignment_count")},
			{Name: "rejection_goto", Description: "Rejection goto.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "rejection_goto")},
			{Name: "reopen_count", Description: "Number of times Incident state has changed from Resolved or Closed to another state.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "reopen_count")},
			{Name: "reopened_by", Description: "Last reopened by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "reopened_by")},
			{Name: "reopened_time", Description: "Last reopened at.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "reopened_time").Transform(parseDateTime)},
			{Name: "resolved_at", Description: "Resolved.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "resolved_at").Transform(parseDateTime)},
			{Name: "resolved_by", Description: "Resolved by.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "resolved_by")},
			{Name: "rfc", Description: "Related change, if one exists.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "rfc")},
			{Name: "route_reason", Description: "Transfer reason.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "route_reason")},
			{Name: "service_offering", Description: "Service offering.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "service_offering")},
			{Name: "severity", Description: "Severity.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "severity")},
			{Name: "short_description", Description: "Short description.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "short_description")},
			{Name: "skills", Description: "Required skills.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "skills")},
			{Name: "sla_due", Description: "Date by which the SLA expects this task to be completed.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "sla_due").Transform(parseDateTime)},
			{Name: "sn_esign_document", Description: "E-Signature document.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "sn_esign_document")},
			{Name: "sn_esign_esignature_configuration", Description: "E-Signature configuration.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "sn_esign_esignature_configuration")},
			{Name: "state", Description: "State.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "state")},
			{Name: "subcategory", Description: "Subcategory.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "subcategory")},
			{Name: "sys_class_name", Description: "Task type.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_class_name")},
			{Name: "sys_created_by", Description: "Created by.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_created_by")},
			{Name: "sys_created_on", Description: "Created.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "sys_created_on").Transform(parseDateTime)},
			{Name: "sys_domain_path", Description: "Domain Path.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_domain_path")},
			{Name: "sys_domain", Description: "Domain to which the task belongs.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "sys_domain")},
			{Name: "sys_id", Description: "Sys ID.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_id")},
			{Name: "sys_mod_count", Description: "Updates.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "sys_mod_count")},
			{Name: "sys_updated_by", Description: "Updated by.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "sys_updated_by")},
			{Name: "sys_updated_on", Description: "Updated.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "sys_updated_on").Transform(parseDateTime)},
			{Name: "task_effective_number", Description: "Effective number.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "task_effective_number")},
			{Name: "time_worked", Description: "Time worked.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "time_worked").Transform(parseDateTime)},
			{Name: "universal_request", Description: "Universal Request.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "universal_request")},
			{Name: "upon_approval", Description: "Upon approval.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "upon_approval")},
			{Name: "upon_reject", Description: "Upon reject.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "upon_reject")},
			{Name: "urgency", Description: "Measure of the business criticality based on the impact and on the business needs of the Customer.", Type: proto.ColumnType_INT, Transform: transform.FromP(getFieldFromSObjectMap, "urgency")},
			{Name: "user_input", Description: "User input.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "user_input")},
			{Name: "variables", Description: "Variables.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "variables")},
			{Name: "watch_list", Description: "Interested users.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "watch_list")},
			{Name: "wf_activity", Description: "Workflow activity.", Type: proto.ColumnType_JSON, Transform: transform.FromP(getFieldFromSObjectMap, "wf_activity")},
			{Name: "work_end", Description: "Actual end.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "work_end").Transform(parseDateTime)},
			{Name: "work_notes_list", Description: "Users interested in work notes.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "work_notes_list")},
			{Name: "work_notes", Description: "Work notes.", Type: proto.ColumnType_STRING, Transform: transform.FromP(getFieldFromSObjectMap, "work_notes")},
			{Name: "work_start", Description: "Actual start.", Type: proto.ColumnType_TIMESTAMP, Transform: transform.FromP(getFieldFromSObjectMap, "work_start").Transform(parseDateTime)},
		},
	}
}
